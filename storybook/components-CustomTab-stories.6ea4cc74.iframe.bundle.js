"use strict";(self.webpackChunk_splunk_ucc_ui_lib=self.webpackChunk_splunk_ucc_ui_lib||[]).push([[6433],{"./src/components/CustomTab.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Base:()=>Base,__namedExportsOrder:()=>__namedExportsOrder,default:()=>CustomTab_stories});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),i18n=__webpack_require__("./node_modules/@splunk/ui-utils/i18n.js"),util=__webpack_require__("./src/util/util.ts"),script=__webpack_require__("./src/util/script.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function CustomTab(_ref){var tab=_ref.tab,_useState2=_slicedToArray((0,react.useState)(!0),2),loading=_useState2[0],setLoading=_useState2[1],divRef=(0,react.useRef)(null),appName=(0,util.YK)().meta.name;return(0,react.useEffect)((function(){(function loadCustomTab(){return new Promise((function(resolve){"external"===tab.customTab.type?import("".concat((0,script.a)(),"/custom/").concat(tab.customTab.src,".js")).then((function(external){var Control=external.default;resolve(Control)})):require(["app/".concat(appName,"/js/build/custom/").concat(tab.customTab.src)],(function(Control){return resolve(Control)}))}))})().then((function(Control){new Control(tab,divRef.current).render(),setLoading(!1)}))}),[]),(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[loading&&(0,i18n._)("Loading..."),(0,jsx_runtime.jsx)("div",{ref:divRef,style:{visibility:loading?"hidden":"visible"}})]})}CustomTab.propTypes={tab:prop_types_default().object.isRequired};const components_CustomTab=CustomTab;CustomTab.__docgenInfo={description:"",methods:[],displayName:"CustomTab",props:{tab:{description:"",type:{name:"object"},required:!0}}};var globalConfigMock=__webpack_require__("./src/mocks/globalConfigMock.ts");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:String(i)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}const CustomTab_stories={component:components_CustomTab,title:"Components/CustomTab",render:function render(props){return(0,util.Zv)((0,globalConfigMock.$)()),(0,jsx_runtime.jsx)(components_CustomTab,function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}({},props))}};var Base={args:{tab:{name:"customtab",customTab:{actions:["edit","delete","clone"],header:[{label:"Name",field:"name"}],src:"example"},entity:[{type:"text",label:"Name",validators:[{type:"regex",errorMsg:"Account Name must begin with a letter and consist exclusively of alphanumeric characters and underscores.",pattern:"^[a-zA-Z]\\w*$"},{type:"string",errorMsg:"Length of input name should be between 1 and 100",minLength:1,maxLength:100}],field:"name",help:"A unique name for the account.",required:!0},{type:"file",label:"Upload File",help:"Upload service account's certificate",field:"service_account",options:{fileSupportMessage:"Here is the support message",supportedFileTypes:["json"]},encrypted:!0,required:!0}],title:"CustomTab"}}};Base.parameters={...Base.parameters,docs:{...Base.parameters?.docs,source:{originalSource:"{\n  args: {\n    tab: {\n      name: 'customtab',\n      customTab: {\n        actions: ['edit', 'delete', 'clone'],\n        header: [{\n          label: 'Name',\n          field: 'name'\n        }],\n        src: 'example'\n      },\n      entity: [{\n        type: 'text',\n        label: 'Name',\n        validators: [{\n          type: 'regex',\n          errorMsg: 'Account Name must begin with a letter and consist exclusively of alphanumeric characters and underscores.',\n          pattern: '^[a-zA-Z]\\\\w*$'\n        }, {\n          type: 'string',\n          errorMsg: 'Length of input name should be between 1 and 100',\n          minLength: 1,\n          maxLength: 100\n        }],\n        field: 'name',\n        help: 'A unique name for the account.',\n        required: true\n      }, {\n        type: 'file',\n        label: 'Upload File',\n        help: \"Upload service account's certificate\",\n        field: 'service_account',\n        options: {\n          fileSupportMessage: 'Here is the support message',\n          supportedFileTypes: ['json']\n        },\n        encrypted: true,\n        required: true\n      }],\n      title: 'CustomTab'\n    }\n  }\n}",...Base.parameters?.docs?.source}}};const __namedExportsOrder=["Base"]},"./src/mocks/globalConfigMock.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>getGlobalConfigMock});var _types_globalConfig_globalConfig__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/types/globalConfig/globalConfig.ts"),globalConfigMock={pages:{configuration:{tabs:[{name:"account",table:{actions:["edit","delete","clone"],header:[{label:"Name",field:"name"}]},entity:[{type:"text",label:"Name",validators:[{type:"regex",errorMsg:"Account Name must begin with a letter and consist exclusively of alphanumeric characters and underscores.",pattern:"^[a-zA-Z]\\w*$"},{type:"string",errorMsg:"Length of input name should be between 1 and 100",minLength:1,maxLength:100}],field:"name",help:"A unique name for the account.",required:!0},{type:"file",label:"Upload File",help:"Upload service account's certificate",field:"service_account",options:{fileSupportMessage:"Here is the support message",supportedFileTypes:["json"]},encrypted:!0,required:!0}],title:"Accounts"},{name:"logging",entity:[{type:"singleSelect",label:"Log level",options:{disableSearch:!0,autoCompleteFields:[{value:"DEBUG",label:"DEBUG"},{value:"INFO",label:"INFO"},{value:"WARN",label:"WARN"},{value:"ERROR",label:"ERROR"},{value:"CRITICAL",label:"CRITICAL"}]},defaultValue:"INFO",field:"loglevel"}],title:"Logging"}],title:"Configuration",description:"Set up your add-on",subDescription:{text:"Configuration page - Ingesting data from to Splunk Cloud?</br>Read our [[blogPost]] to learn more about Data Manager and it's availability on your Splunk Cloud instance.",links:[{slug:"blogPost",link:"https://splk.it/31oy2b2",linkText:"blog post"}]}},inputs:{services:[{name:"demo_input",entity:[{type:"text",label:"Name",validators:[{type:"regex",errorMsg:"Input Name must begin with a letter and consist exclusively of alphanumeric characters and underscores.",pattern:"^[a-zA-Z]\\w*$"},{type:"string",errorMsg:"Length of input name should be between 1 and 100",minLength:1,maxLength:100}],field:"name",help:"A unique name for the data input.",required:!0,encrypted:!1},{type:"text",label:"Interval",validators:[{type:"regex",errorMsg:"Interval must be an integer.",pattern:"^\\-[1-9]\\d*$|^\\d*$"}],defaultValue:"300",field:"interval",help:"Time interval of the data input, in seconds.",required:!0},{type:"text",label:"Disabled Input",defaultValue:"Disabled Input",field:"disabled_input_field",help:"This field should always be disabled",options:{enable:!1}},{type:"singleSelect",label:"Account to use",options:{referenceName:"account"},help:"Account to use for this input.",field:"account",required:!0}],title:"demo_input"}],title:"Inputs",description:"Manage your data inputs",subDescription:{text:"Inputs page - Ingesting data from to Splunk Cloud?</br>Read our [[blogPost]] to learn more about Data Manager and it's availability on your Splunk Cloud instance.",links:[{slug:"blogPost",link:"https://splk.it/31oy2b2",linkText:"blog post"}]},table:{actions:["edit","enable","delete","clone"],header:[{label:"Name",field:"name"},{label:"Interval",field:"interval"},{label:"Index",field:"index"},{label:"Status",field:"disabled"}],moreInfo:[{label:"Name",field:"name"},{label:"Interval",field:"interval"},{label:"Index",field:"index"},{label:"Status",field:"disabled",mapping:{true:"Disabled",false:"Enabled"}}]}},dashboard:{panels:[{name:"addon_version"},{name:"events_ingested_by_sourcetype"},{name:"errors_in_the_addon"}]}},meta:{name:"demo_addon_for_splunk",restRoot:"demo_addon_for_splunk",version:"5.31.1R85f0e18e",displayName:"Demo Add-on for Splunk",schemaVersion:"0.0.3",checkForUpdates:!1}};function getGlobalConfigMock(){return _types_globalConfig_globalConfig__WEBPACK_IMPORTED_MODULE_0__.j.parse(globalConfigMock)}},"./src/types/globalConfig/globalConfig.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{j:()=>GlobalConfigSchema});var lib=__webpack_require__("./node_modules/zod/lib/index.mjs"),meta=lib.z.object({displayName:lib.z.string(),name:lib.z.string(),restRoot:lib.z.string(),apiVersion:lib.z.string().optional(),version:lib.z.string(),schemaVersion:lib.z.string().optional(),checkForUpdates:lib.z.boolean().default(!0)}),NumberValidator=lib.z.object({errorMsg:lib.z.string().optional(),type:lib.z.literal("number"),range:lib.z.array(lib.z.number())}),StringValidator=lib.z.object({errorMsg:lib.z.string().optional(),type:lib.z.literal("string"),minLength:lib.z.number().gte(0),maxLength:lib.z.number().gte(0)}),RegexValidator=lib.z.object({errorMsg:lib.z.string().optional(),type:lib.z.literal("regex"),pattern:lib.z.string()}),EmailValidator=lib.z.object({errorMsg:lib.z.string().optional(),type:lib.z.literal("email")}),Ipv4Validator=lib.z.object({errorMsg:lib.z.string().optional(),type:lib.z.literal("ipv4")}),UrlValidator=lib.z.object({errorMsg:lib.z.string().optional(),type:lib.z.literal("url")}),DateValidator=lib.z.object({errorMsg:lib.z.string().optional(),type:lib.z.literal("date")}),ValueLabelPair=lib.z.object({value:lib.z.union([lib.z.number(),lib.z.string(),lib.z.boolean()]),label:lib.z.string()}),CommonEntityFields=lib.z.object({type:lib.z.string(),field:lib.z.string(),label:lib.z.string(),help:lib.z.string().optional(),tooltip:lib.z.string().optional()}),CommonEditableEntityFields=CommonEntityFields.extend({required:lib.z.boolean().optional().default(!1),encrypted:lib.z.boolean().optional().default(!1)}),CommonEditableEntityOptions=lib.z.object({placeholder:lib.z.string().optional(),display:lib.z.boolean().optional().default(!0),disableonEdit:lib.z.boolean().optional().default(!1),enable:lib.z.boolean().optional().default(!0),requiredWhenVisible:lib.z.boolean().optional().default(!1)}),AllValidators=lib.z.array(lib.z.union([NumberValidator,StringValidator,RegexValidator,EmailValidator,Ipv4Validator,UrlValidator,DateValidator])).nonempty(),LinkEntity=CommonEntityFields.extend({type:lib.z.literal("helpLink"),label:lib.z.string().optional(),options:lib.z.object({text:lib.z.string(),link:lib.z.string()})}),TextEntity=CommonEditableEntityFields.extend({type:lib.z.literal("text"),validators:AllValidators.optional(),defaultValue:lib.z.union([lib.z.string(),lib.z.number()]).optional(),options:CommonEditableEntityOptions.optional()}),TextAreaEntity=CommonEditableEntityFields.extend({type:lib.z.literal("textarea"),validators:AllValidators.optional(),defaultValue:lib.z.string().optional(),options:CommonEditableEntityOptions.extend({rowsMin:lib.z.number().optional(),rowsMax:lib.z.number().optional()}).optional()}),AutoCompleteFields=lib.z.array(lib.z.union([ValueLabelPair,lib.z.object({label:lib.z.string(),children:lib.z.array(ValueLabelPair)})])),SelectCommonOptions=CommonEditableEntityOptions.extend({disableSearch:lib.z.boolean().optional().default(!1),createSearchChoice:lib.z.boolean().optional().default(!1),referenceName:lib.z.string().optional(),endpointUrl:lib.z.string().optional(),allowList:lib.z.string().optional(),denyList:lib.z.string().optional(),labelField:lib.z.string().optional(),autoCompleteFields:AutoCompleteFields.optional(),dependencies:lib.z.array(lib.z.string()).optional(),items:ValueLabelPair.array().optional()}),SingleSelectEntity=CommonEditableEntityFields.extend({type:lib.z.literal("singleSelect"),validators:AllValidators.optional(),defaultValue:lib.z.union([lib.z.string(),lib.z.number(),lib.z.boolean()]).optional(),options:SelectCommonOptions}),MultipleSelectEntity=CommonEditableEntityFields.extend({type:lib.z.literal("multipleSelect"),validators:AllValidators.optional(),defaultValue:lib.z.string().optional(),options:SelectCommonOptions.extend({delimiter:lib.z.string().length(1).optional()})}),CheckboxEntity=CommonEditableEntityFields.extend({type:lib.z.literal("checkbox"),defaultValue:lib.z.union([lib.z.number(),lib.z.boolean()]).optional(),options:CommonEditableEntityOptions.omit({placeholder:!0}).optional()}),CheckboxGroupEntity=CommonEditableEntityFields.extend({type:lib.z.literal("checkboxGroup"),validators:lib.z.tuple([RegexValidator]).optional(),defaultValue:lib.z.union([lib.z.number(),lib.z.boolean()]).optional(),options:CommonEditableEntityOptions.omit({placeholder:!0}).extend({groups:lib.z.array(lib.z.object({label:lib.z.string(),fields:lib.z.array(lib.z.string()),options:lib.z.object({isExpandable:lib.z.boolean().optional(),expand:lib.z.boolean().optional()}).optional()})).optional(),rows:lib.z.array(lib.z.object({field:lib.z.string(),checkbox:lib.z.object({label:lib.z.string().optional(),defaultValue:lib.z.boolean().optional()}).optional(),input:lib.z.object({defaultValue:lib.z.number().optional(),validators:lib.z.tuple([NumberValidator]).optional(),required:lib.z.boolean().optional()}).optional()}))})}),RadioEntity=CommonEditableEntityFields.extend({type:lib.z.literal("radio"),defaultValue:lib.z.string().optional(),options:CommonEditableEntityOptions.extend({items:lib.z.array(ValueLabelPair)})}),FileEntity=CommonEditableEntityFields.extend({type:lib.z.literal("file"),defaultValue:lib.z.string().optional(),validators:lib.z.array(lib.z.union([StringValidator,RegexValidator])).optional(),options:CommonEditableEntityOptions.omit({placeholder:!0}).extend({maxFileSize:lib.z.number().optional(),fileSupportMessage:lib.z.string().optional(),supportedFileTypes:lib.z.array(lib.z.string())}).optional()}),OAuthFields=lib.z.object({oauth_field:lib.z.string(),label:lib.z.string(),field:lib.z.string(),help:lib.z.string(),encrypted:lib.z.boolean().default(!1),required:lib.z.boolean().default(!1),defaultValue:lib.z.union([lib.z.string(),lib.z.number(),lib.z.boolean()]).optional(),options:lib.z.object({placeholder:lib.z.string().optional(),disableonEdit:lib.z.boolean().optional(),enable:lib.z.boolean().optional().default(!0)})}).partial(),OAuthEntity=CommonEditableEntityFields.extend({type:lib.z.literal("oauth"),defaultValue:lib.z.string().optional(),validators:lib.z.array(lib.z.union([StringValidator,RegexValidator])).optional(),options:CommonEditableEntityOptions.omit({placeholder:!0,requiredWhenVisible:!0}).extend({auth_type:lib.z.array(lib.z.union([lib.z.literal("basic"),lib.z.literal("oauth")])),basic:lib.z.array(OAuthFields).optional(),oauth:lib.z.array(OAuthFields).optional(),auth_label:lib.z.string().optional(),oauth_popup_width:lib.z.number().optional(),oauth_popup_height:lib.z.number().optional(),oauth_timeout:lib.z.number().optional(),auth_code_endpoint:lib.z.string().optional(),access_token_endpoint:lib.z.string().optional(),oauth_state_enabled:lib.z.boolean().optional(),auth_endpoint_token_access_type:lib.z.string().optional()})}),CustomEntity=CommonEditableEntityFields.extend({type:lib.z.literal("custom"),options:lib.z.object({type:lib.z.literal("external"),src:lib.z.string()})}),SingleSelectSplunkSearchEntity=CommonEntityFields.extend({type:lib.z.literal("singleSelectSplunkSearch"),defaultValue:lib.z.union([lib.z.string(),lib.z.number(),lib.z.boolean()]).optional(),search:lib.z.string().optional(),valueField:lib.z.string().optional(),labelField:lib.z.string().optional(),options:lib.z.object({items:lib.z.array(ValueLabelPair)}).optional()}),AnyOfEntity=lib.z.discriminatedUnion("type",[LinkEntity,TextEntity,TextAreaEntity,SingleSelectEntity,MultipleSelectEntity,CheckboxEntity,CheckboxGroupEntity,RadioEntity,FileEntity,OAuthEntity,CustomEntity]),TableSchema=lib.z.object({moreInfo:lib.z.array(lib.z.object({field:lib.z.string(),label:lib.z.string(),mapping:lib.z.record(lib.z.any()).optional()})).optional(),header:lib.z.array(lib.z.object({field:lib.z.string(),label:lib.z.string(),mapping:lib.z.record(lib.z.any()).optional(),customCell:lib.z.record(lib.z.any()).optional()})),customRow:lib.z.record(lib.z.any()).optional(),actions:lib.z.array(lib.z.enum(["edit","delete","clone","enable"]))}),HooksSchema=lib.z.object({saveValidator:lib.z.string().optional()}).optional(),WarningSchema=lib.z.object({create:lib.z.string().optional(),edit:lib.z.string().optional(),config:lib.z.string().optional(),clone:lib.z.string().optional()}).optional(),TabSchema=lib.z.object({entity:lib.z.array(AnyOfEntity).optional(),name:lib.z.string(),title:lib.z.string(),options:HooksSchema,table:TableSchema.extend({actions:lib.z.array(lib.z.enum(["edit","delete","clone"]))}).optional(),style:lib.z.enum(["page","dialog"]).optional(),hook:lib.z.record(lib.z.any()).optional(),conf:lib.z.string().optional(),restHandlerName:lib.z.string().optional(),restHandlerModule:lib.z.string().optional(),restHandlerClass:lib.z.string().optional(),customTab:lib.z.record(lib.z.any()).optional(),warning:WarningSchema}),GroupsSchema=lib.z.array(lib.z.object({options:lib.z.object({isExpandable:lib.z.boolean().optional(),expand:lib.z.boolean().optional()}).optional(),label:lib.z.string(),fields:lib.z.array(lib.z.string())})).optional(),TableLessServiceSchema=lib.z.object({name:lib.z.string(),title:lib.z.string(),subTitle:lib.z.string().optional(),entity:lib.z.array(AnyOfEntity),options:HooksSchema,groups:GroupsSchema,style:lib.z.enum(["page","dialog"]).optional(),hook:lib.z.record(lib.z.any()).optional(),conf:lib.z.string().optional(),restHandlerName:lib.z.string().optional(),restHandlerModule:lib.z.string().optional(),restHandlerClass:lib.z.string().optional(),warning:WarningSchema}),TableFullServiceSchema=TableLessServiceSchema.extend({description:lib.z.string().optional(),table:TableSchema}),InputsPageRegular=lib.z.object({title:lib.z.string(),services:lib.z.array(TableFullServiceSchema)}).strict(),SubDescriptionSchema=lib.z.object({text:lib.z.string(),links:lib.z.array(lib.z.object({slug:lib.z.string(),link:lib.z.string(),linkText:lib.z.string()})).optional()}).optional(),InputsPageTableSchema=lib.z.object({title:lib.z.string(),description:lib.z.string().optional(),subDescription:SubDescriptionSchema,menu:lib.z.object({type:lib.z.literal("external"),src:lib.z.string()}).optional(),table:TableSchema,groupsMenu:lib.z.array(lib.z.object({groupName:lib.z.string(),groupTitle:lib.z.string(),groupServices:lib.z.array(lib.z.string()).optional()})).optional(),services:lib.z.array(TableLessServiceSchema.strict())}).strict(),pages=lib.z.object({configuration:lib.z.object({title:lib.z.string(),description:lib.z.string().optional(),subDescription:SubDescriptionSchema,tabs:lib.z.array(TabSchema).min(1)}),inputs:lib.z.union([InputsPageRegular,InputsPageTableSchema]).optional(),dashboard:lib.z.object({panels:lib.z.array(lib.z.object({name:lib.z.string()})).min(1)}).optional()}),alerts=lib.z.array(lib.z.object({name:lib.z.string(),label:lib.z.string(),description:lib.z.string(),activeResponse:lib.z.object({task:lib.z.array(lib.z.string()).min(1),supportsAdhoc:lib.z.boolean(),subject:lib.z.array(lib.z.string()).min(1),category:lib.z.array(lib.z.string()).min(1),technology:lib.z.array(lib.z.object({version:lib.z.array(lib.z.string()).min(1),product:lib.z.string(),vendor:lib.z.string()})).min(1),drilldownUri:lib.z.string().optional(),sourcetype:lib.z.string().optional()}).optional(),entity:lib.z.array(lib.z.discriminatedUnion("type",[TextEntity,TextAreaEntity,SingleSelectEntity,CheckboxEntity,RadioEntity,SingleSelectSplunkSearchEntity])).optional()})).min(1).optional(),GlobalConfigSchema=lib.z.object({meta,pages,alerts})},"./src/util/script.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{a:()=>getBuildDirPath});__webpack_require__("./node_modules/js-yaml/dist/js-yaml.mjs");function getBuildDirPath(){for(var scripts=document.getElementsByTagName("script"),scriptsCount=scripts.length,i=0;i<scriptsCount;i+=1){var s=scripts[i];if(s.src&&s.src.match(/js\/build/)){var lastSlashIndex=s.src.lastIndexOf("/");return s.src.slice(0,lastSlashIndex)}}return""}},"./src/util/util.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ke:()=>generateToast,YK:()=>getUnifiedConfigs,Zv:()=>setUnifiedConfig,gB:()=>filterResponse,mA:()=>isFalse,oA:()=>isTrue,w3:()=>generateEndPointUrl});var _splunk_react_toast_notifications_ToastConstants__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@splunk/react-toast-notifications/ToastConstants.js"),_splunk_react_toast_notifications_Toaster__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@splunk/react-toast-notifications/Toaster.js"),_splunk_react_toast_notifications_Toaster__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_splunk_react_toast_notifications_Toaster__WEBPACK_IMPORTED_MODULE_1__),_types_globalConfig_globalConfig__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/types/globalConfig/globalConfig.ts"),unifiedConfigs=null;function isFalse(value){return null==value||["0","FALSE","F","N","NO","NONE",""].includes(value.toString().toUpperCase())}function isTrue(value){return null!=value&&["1","TRUE","T","Y","YES"].includes(value.toString().toUpperCase())}function generateEndPointUrl(name){if(!unifiedConfigs)throw new Error("No GlobalConfig set");return"".concat(unifiedConfigs.meta.restRoot,"_").concat(name)}function setUnifiedConfig(unifiedConfig){var result=_types_globalConfig_globalConfig__WEBPACK_IMPORTED_MODULE_2__.j.safeParse(unifiedConfig);result.success||console.error("Invalid globalConfig.json",JSON.stringify(result.error.issues)),unifiedConfigs=unifiedConfig}function getUnifiedConfigs(){if(!unifiedConfigs)throw new Error("No GlobalConfig set");return unifiedConfigs}var createToast=(0,_splunk_react_toast_notifications_Toaster__WEBPACK_IMPORTED_MODULE_1__.makeCreateToast)(_splunk_react_toast_notifications_Toaster__WEBPACK_IMPORTED_MODULE_1___default()),generateToast=function generateToast(message,messageType){var toastType,action=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;switch(messageType){case"success":toastType=_splunk_react_toast_notifications_ToastConstants__WEBPACK_IMPORTED_MODULE_0__.TOAST_TYPES.SUCCESS;break;case"error":case"warning":toastType=_splunk_react_toast_notifications_ToastConstants__WEBPACK_IMPORTED_MODULE_0__.TOAST_TYPES.ERROR;break;default:toastType=_splunk_react_toast_notifications_ToastConstants__WEBPACK_IMPORTED_MODULE_0__.TOAST_TYPES.INFO}createToast({type:toastType,message,autoDismiss:!0,dismissOnActionClick:!0,showAction:Boolean(action),action:action||void 0})};function filterResponse(items,labelField,allowList,denyList){var newItems=items.map((function(item){var _item$content,label=labelField?null===(_item$content=item.content)||void 0===_item$content?void 0:_item$content[labelField]:item.name;if("string"!=typeof label)throw new Error("Label not found for ".concat(item.name));return{label,value:item.name}}));return allowList&&(newItems=function filterByAllowList(fields,allowList){var allowRegex=new RegExp(allowList);return fields.filter((function(item){return allowRegex.test(item.value)}))}(newItems,allowList)),denyList&&(newItems=function filterByDenyList(fields,denyList){var denyRegex=new RegExp(denyList);return fields.filter((function(item){return!denyRegex.test(item.value)}))}(newItems,denyList)),newItems}}}]);