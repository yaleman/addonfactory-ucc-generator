"use strict";(self.webpackChunk_splunk_ucc_ui_lib=self.webpackChunk_splunk_ucc_ui_lib||[]).push([[9624],{"./src/types/globalConfig/globalConfig.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{j:()=>GlobalConfigSchema});var lib=__webpack_require__("./node_modules/zod/lib/index.mjs"),meta=lib.z.object({displayName:lib.z.string(),name:lib.z.string(),restRoot:lib.z.string(),apiVersion:lib.z.string().optional(),version:lib.z.string(),schemaVersion:lib.z.string().optional(),checkForUpdates:lib.z.boolean().default(!0)}),NumberValidator=lib.z.object({errorMsg:lib.z.string().optional(),type:lib.z.literal("number"),range:lib.z.array(lib.z.number())}),StringValidator=lib.z.object({errorMsg:lib.z.string().optional(),type:lib.z.literal("string"),minLength:lib.z.number().gte(0),maxLength:lib.z.number().gte(0)}),RegexValidator=lib.z.object({errorMsg:lib.z.string().optional(),type:lib.z.literal("regex"),pattern:lib.z.string()}),EmailValidator=lib.z.object({errorMsg:lib.z.string().optional(),type:lib.z.literal("email")}),Ipv4Validator=lib.z.object({errorMsg:lib.z.string().optional(),type:lib.z.literal("ipv4")}),UrlValidator=lib.z.object({errorMsg:lib.z.string().optional(),type:lib.z.literal("url")}),DateValidator=lib.z.object({errorMsg:lib.z.string().optional(),type:lib.z.literal("date")}),ValueLabelPair=lib.z.object({value:lib.z.union([lib.z.number(),lib.z.string(),lib.z.boolean()]),label:lib.z.string()}),CommonEntityFields=lib.z.object({type:lib.z.string(),field:lib.z.string(),label:lib.z.string(),help:lib.z.string().optional(),tooltip:lib.z.string().optional()}),CommonEditableEntityFields=CommonEntityFields.extend({required:lib.z.boolean().optional().default(!1),encrypted:lib.z.boolean().optional().default(!1)}),CommonEditableEntityOptions=lib.z.object({placeholder:lib.z.string().optional(),display:lib.z.boolean().optional().default(!0),disableonEdit:lib.z.boolean().optional().default(!1),enable:lib.z.boolean().optional().default(!0),requiredWhenVisible:lib.z.boolean().optional().default(!1)}),AllValidators=lib.z.array(lib.z.union([NumberValidator,StringValidator,RegexValidator,EmailValidator,Ipv4Validator,UrlValidator,DateValidator])).nonempty(),LinkEntity=CommonEntityFields.extend({type:lib.z.literal("helpLink"),label:lib.z.string().optional(),options:lib.z.object({text:lib.z.string(),link:lib.z.string()})}),TextEntity=CommonEditableEntityFields.extend({type:lib.z.literal("text"),validators:AllValidators.optional(),defaultValue:lib.z.union([lib.z.string(),lib.z.number()]).optional(),options:CommonEditableEntityOptions.optional()}),TextAreaEntity=CommonEditableEntityFields.extend({type:lib.z.literal("textarea"),validators:AllValidators.optional(),defaultValue:lib.z.string().optional(),options:CommonEditableEntityOptions.extend({rowsMin:lib.z.number().optional(),rowsMax:lib.z.number().optional()}).optional()}),AutoCompleteFields=lib.z.array(lib.z.union([ValueLabelPair,lib.z.object({label:lib.z.string(),children:lib.z.array(ValueLabelPair)})])),SelectCommonOptions=CommonEditableEntityOptions.extend({disableSearch:lib.z.boolean().optional().default(!1),createSearchChoice:lib.z.boolean().optional().default(!1),referenceName:lib.z.string().optional(),endpointUrl:lib.z.string().optional(),allowList:lib.z.string().optional(),denyList:lib.z.string().optional(),labelField:lib.z.string().optional(),autoCompleteFields:AutoCompleteFields.optional(),dependencies:lib.z.array(lib.z.string()).optional(),items:ValueLabelPair.array().optional()}),SingleSelectEntity=CommonEditableEntityFields.extend({type:lib.z.literal("singleSelect"),validators:AllValidators.optional(),defaultValue:lib.z.union([lib.z.string(),lib.z.number(),lib.z.boolean()]).optional(),options:SelectCommonOptions}),MultipleSelectEntity=CommonEditableEntityFields.extend({type:lib.z.literal("multipleSelect"),validators:AllValidators.optional(),defaultValue:lib.z.string().optional(),options:SelectCommonOptions.extend({delimiter:lib.z.string().length(1).optional()})}),CheckboxEntity=CommonEditableEntityFields.extend({type:lib.z.literal("checkbox"),defaultValue:lib.z.union([lib.z.number(),lib.z.boolean()]).optional(),options:CommonEditableEntityOptions.omit({placeholder:!0}).optional()}),CheckboxGroupEntity=CommonEditableEntityFields.extend({type:lib.z.literal("checkboxGroup"),validators:lib.z.tuple([RegexValidator]).optional(),defaultValue:lib.z.union([lib.z.number(),lib.z.boolean()]).optional(),options:CommonEditableEntityOptions.omit({placeholder:!0}).extend({groups:lib.z.array(lib.z.object({label:lib.z.string(),fields:lib.z.array(lib.z.string()),options:lib.z.object({isExpandable:lib.z.boolean().optional(),expand:lib.z.boolean().optional()}).optional()})).optional(),rows:lib.z.array(lib.z.object({field:lib.z.string(),checkbox:lib.z.object({label:lib.z.string().optional(),defaultValue:lib.z.boolean().optional()}).optional(),input:lib.z.object({defaultValue:lib.z.number().optional(),validators:lib.z.tuple([NumberValidator]).optional(),required:lib.z.boolean().optional()}).optional()}))})}),RadioEntity=CommonEditableEntityFields.extend({type:lib.z.literal("radio"),defaultValue:lib.z.string().optional(),options:CommonEditableEntityOptions.extend({items:lib.z.array(ValueLabelPair)})}),FileEntity=CommonEditableEntityFields.extend({type:lib.z.literal("file"),defaultValue:lib.z.string().optional(),validators:lib.z.array(lib.z.union([StringValidator,RegexValidator])).optional(),options:CommonEditableEntityOptions.omit({placeholder:!0}).extend({maxFileSize:lib.z.number().optional(),fileSupportMessage:lib.z.string().optional(),supportedFileTypes:lib.z.array(lib.z.string())}).optional()}),OAuthFields=lib.z.object({oauth_field:lib.z.string(),label:lib.z.string(),field:lib.z.string(),help:lib.z.string(),encrypted:lib.z.boolean().default(!1),required:lib.z.boolean().default(!1),defaultValue:lib.z.union([lib.z.string(),lib.z.number(),lib.z.boolean()]).optional(),options:lib.z.object({placeholder:lib.z.string().optional(),disableonEdit:lib.z.boolean().optional(),enable:lib.z.boolean().optional().default(!0)})}).partial(),OAuthEntity=CommonEditableEntityFields.extend({type:lib.z.literal("oauth"),defaultValue:lib.z.string().optional(),validators:lib.z.array(lib.z.union([StringValidator,RegexValidator])).optional(),options:CommonEditableEntityOptions.omit({placeholder:!0,requiredWhenVisible:!0}).extend({auth_type:lib.z.array(lib.z.union([lib.z.literal("basic"),lib.z.literal("oauth")])),basic:lib.z.array(OAuthFields).optional(),oauth:lib.z.array(OAuthFields).optional(),auth_label:lib.z.string().optional(),oauth_popup_width:lib.z.number().optional(),oauth_popup_height:lib.z.number().optional(),oauth_timeout:lib.z.number().optional(),auth_code_endpoint:lib.z.string().optional(),access_token_endpoint:lib.z.string().optional(),oauth_state_enabled:lib.z.boolean().optional(),auth_endpoint_token_access_type:lib.z.string().optional()})}),CustomEntity=CommonEditableEntityFields.extend({type:lib.z.literal("custom"),options:lib.z.object({type:lib.z.literal("external"),src:lib.z.string()})}),SingleSelectSplunkSearchEntity=CommonEntityFields.extend({type:lib.z.literal("singleSelectSplunkSearch"),defaultValue:lib.z.union([lib.z.string(),lib.z.number(),lib.z.boolean()]).optional(),search:lib.z.string().optional(),valueField:lib.z.string().optional(),labelField:lib.z.string().optional(),options:lib.z.object({items:lib.z.array(ValueLabelPair)}).optional()}),AnyOfEntity=lib.z.discriminatedUnion("type",[LinkEntity,TextEntity,TextAreaEntity,SingleSelectEntity,MultipleSelectEntity,CheckboxEntity,CheckboxGroupEntity,RadioEntity,FileEntity,OAuthEntity,CustomEntity]),TableSchema=lib.z.object({moreInfo:lib.z.array(lib.z.object({field:lib.z.string(),label:lib.z.string(),mapping:lib.z.record(lib.z.any()).optional()})).optional(),header:lib.z.array(lib.z.object({field:lib.z.string(),label:lib.z.string(),mapping:lib.z.record(lib.z.any()).optional(),customCell:lib.z.record(lib.z.any()).optional()})),customRow:lib.z.record(lib.z.any()).optional(),actions:lib.z.array(lib.z.enum(["edit","delete","clone","enable"]))}),HooksSchema=lib.z.object({saveValidator:lib.z.string().optional()}).optional(),WarningSchema=lib.z.object({create:lib.z.string().optional(),edit:lib.z.string().optional(),config:lib.z.string().optional(),clone:lib.z.string().optional()}).optional(),TabSchema=lib.z.object({entity:lib.z.array(AnyOfEntity).optional(),name:lib.z.string(),title:lib.z.string(),options:HooksSchema,table:TableSchema.extend({actions:lib.z.array(lib.z.enum(["edit","delete","clone"]))}).optional(),style:lib.z.enum(["page","dialog"]).optional(),hook:lib.z.record(lib.z.any()).optional(),conf:lib.z.string().optional(),restHandlerName:lib.z.string().optional(),restHandlerModule:lib.z.string().optional(),restHandlerClass:lib.z.string().optional(),customTab:lib.z.record(lib.z.any()).optional(),warning:WarningSchema}),GroupsSchema=lib.z.array(lib.z.object({options:lib.z.object({isExpandable:lib.z.boolean().optional(),expand:lib.z.boolean().optional()}).optional(),label:lib.z.string(),fields:lib.z.array(lib.z.string())})).optional(),TableLessServiceSchema=lib.z.object({name:lib.z.string(),title:lib.z.string(),subTitle:lib.z.string().optional(),entity:lib.z.array(AnyOfEntity),options:HooksSchema,groups:GroupsSchema,style:lib.z.enum(["page","dialog"]).optional(),hook:lib.z.record(lib.z.any()).optional(),conf:lib.z.string().optional(),restHandlerName:lib.z.string().optional(),restHandlerModule:lib.z.string().optional(),restHandlerClass:lib.z.string().optional(),warning:WarningSchema}),TableFullServiceSchema=TableLessServiceSchema.extend({description:lib.z.string().optional(),table:TableSchema}),InputsPageRegular=lib.z.object({title:lib.z.string(),services:lib.z.array(TableFullServiceSchema)}).strict(),SubDescriptionSchema=lib.z.object({text:lib.z.string(),links:lib.z.array(lib.z.object({slug:lib.z.string(),link:lib.z.string(),linkText:lib.z.string()})).optional()}).optional(),InputsPageTableSchema=lib.z.object({title:lib.z.string(),description:lib.z.string().optional(),subDescription:SubDescriptionSchema,menu:lib.z.object({type:lib.z.literal("external"),src:lib.z.string()}).optional(),table:TableSchema,groupsMenu:lib.z.array(lib.z.object({groupName:lib.z.string(),groupTitle:lib.z.string(),groupServices:lib.z.array(lib.z.string()).optional()})).optional(),services:lib.z.array(TableLessServiceSchema.strict())}).strict(),pages=lib.z.object({configuration:lib.z.object({title:lib.z.string(),description:lib.z.string().optional(),subDescription:SubDescriptionSchema,tabs:lib.z.array(TabSchema).min(1)}),inputs:lib.z.union([InputsPageRegular,InputsPageTableSchema]).optional(),dashboard:lib.z.object({panels:lib.z.array(lib.z.object({name:lib.z.string()})).min(1)}).optional()}),alerts=lib.z.array(lib.z.object({name:lib.z.string(),label:lib.z.string(),description:lib.z.string(),activeResponse:lib.z.object({task:lib.z.array(lib.z.string()).min(1),supportsAdhoc:lib.z.boolean(),subject:lib.z.array(lib.z.string()).min(1),category:lib.z.array(lib.z.string()).min(1),technology:lib.z.array(lib.z.object({version:lib.z.array(lib.z.string()).min(1),product:lib.z.string(),vendor:lib.z.string()})).min(1),drilldownUri:lib.z.string().optional(),sourcetype:lib.z.string().optional()}).optional(),entity:lib.z.array(lib.z.discriminatedUnion("type",[TextEntity,TextAreaEntity,SingleSelectEntity,CheckboxEntity,RadioEntity,SingleSelectSplunkSearchEntity])).optional()})).min(1).optional(),GlobalConfigSchema=lib.z.object({meta,pages,alerts})},"./src/util/axiosCallWrapper.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{L:()=>axiosCallWrapper});var axios__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/axios/lib/axios.js"),_splunk_splunk_utils_config__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@splunk/splunk-utils/config.js"),_splunk_splunk_utils_url__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@splunk/splunk-utils/url.js"),_util__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/util/util.ts");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:String(i)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var axiosCallWrapper=function axiosCallWrapper(_ref){var serviceName=_ref.serviceName,endpointUrl=_ref.endpointUrl,params=_ref.params,body=_ref.body,cancelToken=_ref.cancelToken,_ref$customHeaders=_ref.customHeaders,customHeaders=void 0===_ref$customHeaders?{}:_ref$customHeaders,_ref$method=_ref.method,method=void 0===_ref$method?"get":_ref$method,_ref$handleError=_ref.handleError,handleError=void 0!==_ref$handleError&&_ref$handleError,_ref$callbackOnError=_ref.callbackOnError,callbackOnError=void 0===_ref$callbackOnError?function(){}:_ref$callbackOnError,endpoint=serviceName?(0,_util__WEBPACK_IMPORTED_MODULE_2__.w3)(serviceName):endpointUrl,appData={app:_splunk_splunk_utils_config__WEBPACK_IMPORTED_MODULE_0__.app,owner:"nobody"},baseHeaders={"X-Splunk-Form-Key":_splunk_splunk_utils_config__WEBPACK_IMPORTED_MODULE_0__.CSRFToken,"X-Requested-With":"XMLHttpRequest","Content-Type":"application/json"},headers=Object.assign(baseHeaders,customHeaders),url=(0,_splunk_splunk_utils_url__WEBPACK_IMPORTED_MODULE_1__.createRESTURL)(endpoint,appData),newParams={output_mode:"json"};params&&(newParams=_objectSpread(_objectSpread({},newParams),params));var options={params:newParams,method,url,credentials:"include",headers,cancelToken};return"post"===method&&(options.data=body),handleError?(0,axios__WEBPACK_IMPORTED_MODULE_3__.Z)(options).catch((function(error){var message="";return axios__WEBPACK_IMPORTED_MODULE_3__.Z.isCancel(error)||(message=error.response?"Error response received from server: ".concat(error.response.data.messages[0].text):error.request?"No response received while making request to ".concat(endpoint):"Error making ".concat(method," request to ").concat(endpoint),(0,_util__WEBPACK_IMPORTED_MODULE_2__.Ke)(message,"error"),callbackOnError(error)),Promise.reject(error)})):(0,axios__WEBPACK_IMPORTED_MODULE_3__.Z)(options)}},"./src/util/util.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ke:()=>generateToast,YK:()=>getUnifiedConfigs,Zv:()=>setUnifiedConfig,gB:()=>filterResponse,mA:()=>isFalse,oA:()=>isTrue,w3:()=>generateEndPointUrl});var _splunk_react_toast_notifications_ToastConstants__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@splunk/react-toast-notifications/ToastConstants.js"),_splunk_react_toast_notifications_Toaster__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@splunk/react-toast-notifications/Toaster.js"),_splunk_react_toast_notifications_Toaster__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_splunk_react_toast_notifications_Toaster__WEBPACK_IMPORTED_MODULE_1__),_types_globalConfig_globalConfig__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/types/globalConfig/globalConfig.ts"),unifiedConfigs=null;function isFalse(value){return null==value||["0","FALSE","F","N","NO","NONE",""].includes(value.toString().toUpperCase())}function isTrue(value){return null!=value&&["1","TRUE","T","Y","YES"].includes(value.toString().toUpperCase())}function generateEndPointUrl(name){if(!unifiedConfigs)throw new Error("No GlobalConfig set");return"".concat(unifiedConfigs.meta.restRoot,"_").concat(name)}function setUnifiedConfig(unifiedConfig){var result=_types_globalConfig_globalConfig__WEBPACK_IMPORTED_MODULE_2__.j.safeParse(unifiedConfig);result.success||console.error("Invalid globalConfig.json",JSON.stringify(result.error.issues)),unifiedConfigs=unifiedConfig}function getUnifiedConfigs(){if(!unifiedConfigs)throw new Error("No GlobalConfig set");return unifiedConfigs}var createToast=(0,_splunk_react_toast_notifications_Toaster__WEBPACK_IMPORTED_MODULE_1__.makeCreateToast)(_splunk_react_toast_notifications_Toaster__WEBPACK_IMPORTED_MODULE_1___default()),generateToast=function generateToast(message,messageType){var toastType,action=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;switch(messageType){case"success":toastType=_splunk_react_toast_notifications_ToastConstants__WEBPACK_IMPORTED_MODULE_0__.TOAST_TYPES.SUCCESS;break;case"error":case"warning":toastType=_splunk_react_toast_notifications_ToastConstants__WEBPACK_IMPORTED_MODULE_0__.TOAST_TYPES.ERROR;break;default:toastType=_splunk_react_toast_notifications_ToastConstants__WEBPACK_IMPORTED_MODULE_0__.TOAST_TYPES.INFO}createToast({type:toastType,message,autoDismiss:!0,dismissOnActionClick:!0,showAction:Boolean(action),action:action||void 0})};function filterResponse(items,labelField,allowList,denyList){var newItems=items.map((function(item){var _item$content,label=labelField?null===(_item$content=item.content)||void 0===_item$content?void 0:_item$content[labelField]:item.name;if("string"!=typeof label)throw new Error("Label not found for ".concat(item.name));return{label,value:item.name}}));return allowList&&(newItems=function filterByAllowList(fields,allowList){var allowRegex=new RegExp(allowList);return fields.filter((function(item){return allowRegex.test(item.value)}))}(newItems,allowList)),denyList&&(newItems=function filterByDenyList(fields,denyList){var denyRegex=new RegExp(denyList);return fields.filter((function(item){return!denyRegex.test(item.value)}))}(newItems,denyList)),newItems}}}]);