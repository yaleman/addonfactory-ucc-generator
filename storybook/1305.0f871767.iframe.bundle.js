(self.webpackChunk_splunk_ucc_ui_lib=self.webpackChunk_splunk_ucc_ui_lib||[]).push([[1305],{"./node_modules/@splunk/react-icons/Cross.js":(module,__unused_webpack_exports,__webpack_require__)=>{(()=>{"use strict";var e={n:r=>{var t=r&&r.__esModule?()=>r.default:()=>r;return e.d(t,{a:t}),t},d:(r,t)=>{for(var n in t)e.o(t,n)&&!e.o(r,n)&&Object.defineProperty(r,n,{enumerable:!0,get:t[n]})},o:(e,r)=>Object.prototype.hasOwnProperty.call(e,r),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},r={};e.r(r),e.d(r,{default:()=>y});const t=__webpack_require__("./node_modules/react/index.js");var n=e.n(t);const a=__webpack_require__("./node_modules/@splunk/react-icons/SVG.js");var o=e.n(a);const u=__webpack_require__("./node_modules/@splunk/react-icons/IconProvider.js");function i(e,r){if(null==e)return{};var n,a,t=function l(e,r){if(null==e)return{};var a,o,t={},n=Object.keys(e);for(o=0;o<n.length;o++)a=n[o],r.indexOf(a)>=0||(t[a]=e[a]);return t}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var f=new Map;f.set("outlined",(function(){return n().createElement(n().Fragment,null,n().createElement("path",{d:"M6.70711 5.29289C6.31658 4.90237 5.68342 4.90237 5.29289 5.29289C4.90237 5.68342 4.90237 6.31658 5.29289 6.70711L10.5858 12L5.2929 17.2929C4.90238 17.6834 4.90238 18.3166 5.2929 18.7071C5.68342 19.0976 6.31659 19.0976 6.70711 18.7071L12 13.4142L17.2929 18.7071C17.6834 19.0976 18.3166 19.0976 18.7071 18.7071C19.0976 18.3166 19.0976 17.6834 18.7071 17.2929L13.4142 12L18.7071 6.70711C19.0976 6.31658 19.0976 5.68342 18.7071 5.29289C18.3166 4.90237 17.6834 4.90237 17.2929 5.29289L12 10.5858L6.70711 5.29289Z"}))}));var d=["default","outlined"],s=function e(r){return"default"===r||r&&!function e(r){return d.indexOf(r)>=0}(r)?"outlined":r},p=function e(r){var a=r.children,l=r.variant,c=i(r,["children","variant"]),d=s(l),v="cross-".concat(d),p=(0,t.useContext)(u.IconContext),y=f.get(d);if(p&&y){var b=p.toRender;if((0,p.addIcon)(v,y()),!b)return null}return n().createElement(o(),c,a,p?n().createElement("use",{href:"#".concat(v)}):!!y&&y())};p.defaultProps={variant:"default"};const y=p;module.exports=r})()},"./node_modules/@splunk/react-icons/enterprise/Clear.js":(module,__unused_webpack_exports,__webpack_require__)=>{(()=>{"use strict";var e={n:r=>{var t=r&&r.__esModule?()=>r.default:()=>r;return e.d(t,{a:t}),t},d:(r,t)=>{for(var n in t)e.o(t,n)&&!e.o(r,n)&&Object.defineProperty(r,n,{enumerable:!0,get:t[n]})},o:(e,r)=>Object.prototype.hasOwnProperty.call(e,r),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},r={};e.r(r),e.d(r,{default:()=>i});const t=__webpack_require__("./node_modules/react/index.js");var n=e.n(t);const o=__webpack_require__("./node_modules/@splunk/ui-utils/i18n.js"),a=__webpack_require__("./node_modules/@splunk/react-icons/SVGInternal.js");var l=e.n(a);function u(){return u=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},u.apply(this,arguments)}function i(e){return n().createElement(l(),u({screenReaderText:(0,o._)("Clear")},e),n().createElement("path",{d:"M918.315 750.645L1500 1332.33 1332.33 1500 750.645 918.315 167.67 1500 0 1332.33l581.685-582.975L0 167.67 167.67 0l582.975 581.685L1332.33 0 1500 167.67"}))}module.exports=r})()},"./node_modules/@splunk/react-icons/enterprise/Close.js":(module,__unused_webpack_exports,__webpack_require__)=>{(()=>{"use strict";var e={n:r=>{var t=r&&r.__esModule?()=>r.default:()=>r;return e.d(t,{a:t}),t},d:(r,t)=>{for(var n in t)e.o(t,n)&&!e.o(r,n)&&Object.defineProperty(r,n,{enumerable:!0,get:t[n]})},o:(e,r)=>Object.prototype.hasOwnProperty.call(e,r),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},r={};e.r(r),e.d(r,{default:()=>l});const t=__webpack_require__("./node_modules/react/index.js");var n=e.n(t);const o=__webpack_require__("./node_modules/@splunk/ui-utils/i18n.js"),a=__webpack_require__("./node_modules/@splunk/react-icons/enterprise/Clear.js");var u=e.n(a);function i(){return i=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},i.apply(this,arguments)}function l(e){return n().createElement(u(),i({screenReaderText:(0,o._)("Close")},e))}module.exports=r})()},"./node_modules/@splunk/react-ui/Box.js":(module,__unused_webpack_exports,__webpack_require__)=>{(()=>{"use strict";var e={n:n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},d:(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},n={};e.r(n),e.d(n,{default:()=>v});const t=__webpack_require__("./node_modules/react/index.js");var r=e.n(t);const i=__webpack_require__("./node_modules/prop-types/index.js");var l=e.n(i);const o=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");var a=e.n(o);const f=__webpack_require__("./node_modules/@splunk/themes/index.js");var c=a().div.withConfig({displayName:"BoxStyles__Styled",componentId:"sc-1h4b5f6-0"})(["",";align-items:stretch;align-content:stretch;flex-flow:row nowrap;flex-grow:0;flex-shrink:0;justify-content:flex-start;width:auto;max-width:100%;@media all and (-ms-high-contrast:none){max-width:calc(100% - 0.01px);}&[data-inline]{display:inline-block;vertical-align:middle;}&[data-flex]{display:flex;}&[data-flex][data-inline]{display:inline-flex;}"],f.mixins.reset("block"));function d(){return d=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},d.apply(this,arguments)}function s(e,n){if(null==e)return{};var r,i,t=function u(e,n){if(null==e)return{};var i,l,t={},r=Object.keys(e);for(l=0;l<r.length;l++)i=r[l],n.indexOf(i)>=0||(t[i]=e[i]);return t}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)r=l[i],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var p={children:l().node,elementRef:l().oneOfType([l().func,l().object]),flex:l().bool,inline:l().bool};function y(e){var n=e.children,t=e.elementRef,i=e.flex,l=void 0!==i&&i,o=e.inline,a=void 0!==o&&o,f=s(e,["children","elementRef","flex","inline"]);return r().createElement(c,d({ref:t},f,{"data-inline":a||void 0,"data-flex":l||void 0}),n)}y.propTypes=p;const v=y;module.exports=n})()},"./node_modules/immutability-helper/index.js":(module,exports,__webpack_require__)=>{"use strict";var process=__webpack_require__("./node_modules/process/browser.js");function stringifiable(obj){return"object"!=typeof obj||"toString"in obj?obj:Object.prototype.toString.call(obj).slice(8,-1)}Object.defineProperty(exports,"__esModule",{value:!0});var isProduction="object"==typeof process&&!0;function invariant(condition,message){if(!condition){if(isProduction)throw new Error("Invariant failed");throw new Error(message())}}exports.invariant=invariant;var hasOwnProperty=Object.prototype.hasOwnProperty,splice=Array.prototype.splice,toString=Object.prototype.toString;function type(obj){return toString.call(obj).slice(8,-1)}var assign=Object.assign||function(target,source){return getAllKeys(source).forEach((function(key){hasOwnProperty.call(source,key)&&(target[key]=source[key])})),target},getAllKeys="function"==typeof Object.getOwnPropertySymbols?function(obj){return Object.keys(obj).concat(Object.getOwnPropertySymbols(obj))}:function(obj){return Object.keys(obj)};function copy(object){return Array.isArray(object)?assign(object.constructor(object.length),object):"Map"===type(object)?new Map(object):"Set"===type(object)?new Set(object):object&&"object"==typeof object?assign(Object.create(Object.getPrototypeOf(object)),object):object}var Context=function(){function Context(){this.commands=assign({},defaultCommands),this.update=this.update.bind(this),this.update.extend=this.extend=this.extend.bind(this),this.update.isEquals=function(x,y){return x===y},this.update.newContext=function(){return(new Context).update}}return Object.defineProperty(Context.prototype,"isEquals",{get:function(){return this.update.isEquals},set:function(value){this.update.isEquals=value},enumerable:!0,configurable:!0}),Context.prototype.extend=function(directive,fn){this.commands[directive]=fn},Context.prototype.update=function(object,$spec){var _this=this,spec="function"==typeof $spec?{$apply:$spec}:$spec;Array.isArray(object)&&Array.isArray(spec)||invariant(!Array.isArray(spec),(function(){return"update(): You provided an invalid spec to update(). The spec may not contain an array except as the value of $set, $push, $unshift, $splice or any custom command allowing an array value."})),invariant("object"==typeof spec&&null!==spec,(function(){return"update(): You provided an invalid spec to update(). The spec and every included key path must be plain objects containing one of the following commands: "+Object.keys(_this.commands).join(", ")+"."}));var nextObject=object;return getAllKeys(spec).forEach((function(key){if(hasOwnProperty.call(_this.commands,key)){var objectWasNextObject=object===nextObject;nextObject=_this.commands[key](spec[key],nextObject,spec,object),objectWasNextObject&&_this.isEquals(nextObject,object)&&(nextObject=object)}else{var nextValueForKey="Map"===type(object)?_this.update(object.get(key),spec[key]):_this.update(object[key],spec[key]),nextObjectValue="Map"===type(nextObject)?nextObject.get(key):nextObject[key];_this.isEquals(nextValueForKey,nextObjectValue)&&(void 0!==nextValueForKey||hasOwnProperty.call(object,key))||(nextObject===object&&(nextObject=copy(object)),"Map"===type(nextObject)?nextObject.set(key,nextValueForKey):nextObject[key]=nextValueForKey)}})),nextObject},Context}();exports.Context=Context;var defaultCommands={$push:function(value,nextObject,spec){return invariantPushAndUnshift(nextObject,spec,"$push"),value.length?nextObject.concat(value):nextObject},$unshift:function(value,nextObject,spec){return invariantPushAndUnshift(nextObject,spec,"$unshift"),value.length?value.concat(nextObject):nextObject},$splice:function(value,nextObject,spec,originalObject){return function invariantSplices(value,spec){invariant(Array.isArray(value),(function(){return"Expected $splice target to be an array; got "+stringifiable(value)})),invariantSplice(spec.$splice)}(nextObject,spec),value.forEach((function(args){invariantSplice(args),nextObject===originalObject&&args.length&&(nextObject=copy(originalObject)),splice.apply(nextObject,args)})),nextObject},$set:function(value,_nextObject,spec){return function invariantSet(spec){invariant(1===Object.keys(spec).length,(function(){return"Cannot have more than one key in an object with $set"}))}(spec),value},$toggle:function(targets,nextObject){invariantSpecArray(targets,"$toggle");var nextObjectCopy=targets.length?copy(nextObject):nextObject;return targets.forEach((function(target){nextObjectCopy[target]=!nextObject[target]})),nextObjectCopy},$unset:function(value,nextObject,_spec,originalObject){return invariantSpecArray(value,"$unset"),value.forEach((function(key){Object.hasOwnProperty.call(nextObject,key)&&(nextObject===originalObject&&(nextObject=copy(originalObject)),delete nextObject[key])})),nextObject},$add:function(values,nextObject,_spec,originalObject){return invariantMapOrSet(nextObject,"$add"),invariantSpecArray(values,"$add"),"Map"===type(nextObject)?values.forEach((function(_a){var key=_a[0],value=_a[1];nextObject===originalObject&&nextObject.get(key)!==value&&(nextObject=copy(originalObject)),nextObject.set(key,value)})):values.forEach((function(value){nextObject!==originalObject||nextObject.has(value)||(nextObject=copy(originalObject)),nextObject.add(value)})),nextObject},$remove:function(value,nextObject,_spec,originalObject){return invariantMapOrSet(nextObject,"$remove"),invariantSpecArray(value,"$remove"),value.forEach((function(key){nextObject===originalObject&&nextObject.has(key)&&(nextObject=copy(originalObject)),nextObject.delete(key)})),nextObject},$merge:function(value,nextObject,_spec,originalObject){return function invariantMerge(target,specValue){invariant(specValue&&"object"==typeof specValue,(function(){return"update(): $merge expects a spec of type 'object'; got "+stringifiable(specValue)})),invariant(target&&"object"==typeof target,(function(){return"update(): $merge expects a target of type 'object'; got "+stringifiable(target)}))}(nextObject,value),getAllKeys(value).forEach((function(key){value[key]!==nextObject[key]&&(nextObject===originalObject&&(nextObject=copy(originalObject)),nextObject[key]=value[key])})),nextObject},$apply:function(value,original){return function invariantApply(fn){invariant("function"==typeof fn,(function(){return"update(): expected spec of $apply to be a function; got "+stringifiable(fn)+"."}))}(value),value(original)}},defaultContext=new Context;function invariantPushAndUnshift(value,spec,command){invariant(Array.isArray(value),(function(){return"update(): expected target of "+stringifiable(command)+" to be an array; got "+stringifiable(value)+"."})),invariantSpecArray(spec[command],command)}function invariantSpecArray(spec,command){invariant(Array.isArray(spec),(function(){return"update(): expected spec of "+stringifiable(command)+" to be an array; got "+stringifiable(spec)+". Did you forget to wrap your parameter in an array?"}))}function invariantSplice(value){invariant(Array.isArray(value),(function(){return"update(): expected spec of $splice to be an array of arrays; got "+stringifiable(value)+". Did you forget to wrap your parameters in an array?"}))}function invariantMapOrSet(target,command){var typeOfTarget=type(target);invariant("Map"===typeOfTarget||"Set"===typeOfTarget,(function(){return"update(): "+stringifiable(command)+" expects a target of type Set or Map; got "+stringifiable(typeOfTarget)}))}exports.isEquals=defaultContext.update.isEquals,exports.extend=defaultContext.extend,exports.default=defaultContext.update,exports.default.default=module.exports=assign(exports.default,exports)}}]);